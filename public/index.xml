<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
      <title>Alisa的数字花园</title>
      <link>https://quartz.jzhao.xyz</link>
      <description>最近的10条笔记 on Alisa的数字花园</description>
      <generator>Quartz -- quartz.jzhao.xyz</generator>
      <item>
    <title>2125 d2</title>
    <link>https://quartz.jzhao.xyz/ACM-research/%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98%EF%BC%81/cf/2125-d2</link>
    <guid>https://quartz.jzhao.xyz/ACM-research/%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98%EF%BC%81/cf/2125-d2</guid>
    <description><![CDATA[ A B C 容斥原理。 定义一个函数 cal(x) 来 计算 1 ~ x 中 是 2 3 5 7 倍数 的总个数，最后输出 r - cal(r) - (l - 1 - cal(l - 1)) 即可。 可以直接枚举 但是这里讲一下二进制枚举的写法。 auto cal = [&amp;](int n) -&gt; int { vector&lt;int&gt; v = {2, 3, 5, 7}; int ans = 0; // 我们最后要计算 2 + 3 + 5 + 7 - （2 * 3 + 2 * 5 + ...） // 所以 奇数加 偶数减 for (int mask = 1; mask &l... ]]></description>
    <pubDate>Wed, 23 Jul 2025 07:23:18 GMT</pubDate>
  </item><item>
    <title>20250723 河南萌新2</title>
    <link>https://quartz.jzhao.xyz/ACM-research/%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98%EF%BC%81/nowcoder/20250723-%E6%B2%B3%E5%8D%97%E8%90%8C%E6%96%B02</link>
    <guid>https://quartz.jzhao.xyz/ACM-research/%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98%EF%BC%81/nowcoder/20250723-%E6%B2%B3%E5%8D%97%E8%90%8C%E6%96%B02</guid>
    <description><![CDATA[ M 签到。 勾股定理列出来然后观察即可，最后答案是 \frac{\pi x^{2}}{8} K 签到，直接输出那个玩意就行。 I 题意等价于求二分答案的时间复杂度，如果n是2的次幂，答案就是__lg(n)；如果不是的话，就要多搜索一次。 如何高效判断 n 是否是 2 的次幂？ 可以采用 if ((n &amp; (n - 1)) != 0) ans++; 由于 &amp; 的优先级较低，这里的括号应当是一个都不能少的，可以自行尝试。 D 建图之后dfs。 dfs 的时候要注意如何高效识别 当前的节点 cur 是哪条路过来的，可以考虑建立一个前驱数组，也可以直接在 dfs 的参数上加上。 最后查... ]]></description>
    <pubDate>Wed, 23 Jul 2025 07:23:18 GMT</pubDate>
  </item><item>
    <title>415</title>
    <link>https://quartz.jzhao.xyz/ACM-research/%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98%EF%BC%81/ABC/415</link>
    <guid>https://quartz.jzhao.xyz/ACM-research/%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98%EF%BC%81/ABC/415</guid>
    <description><![CDATA[ A 签到。 B 签到。 C 一开始没有看懂题捏。 混合其实是或运算，给的 binary string 其实是第i种是危险的，由于n不大 所以其实暴力搜索即可。 bfs code void solve() { int n; cin &gt;&gt; n; string s; cin &gt;&gt; s; // danger[i] 表示状态i是否危险 vector&lt;int&gt; danger(1 &lt;&lt; n, 0); for (int i = 1; i &lt; (1 &lt;&lt; n); i++) { danger[i] = (s[i - 1] - &#039;0&#03... ]]></description>
    <pubDate>Tue, 22 Jul 2025 17:45:15 GMT</pubDate>
  </item><item>
    <title>20250722</title>
    <link>https://quartz.jzhao.xyz/ACM-research/%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98%EF%BC%81/nowcoder/2025%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1/20250722</link>
    <guid>https://quartz.jzhao.xyz/ACM-research/%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98%EF%BC%81/nowcoder/2025%E6%9A%91%E6%9C%9F%E5%A4%9A%E6%A0%A1/20250722</guid>
    <description><![CDATA[ F 记 a + b = tot 分 n &gt;= tot 和 n &lt; tot 两类讨论。 对于 n &lt; tot 如果 n &lt;= a 那么一定无法做到；如果 n &gt; a 那么直接可以做到 输出0 对于 n &gt;= tot 我们直接令 n %= tot 表示可以经历完整的 n / tot 轮；对于剩下的余数 当 n &gt; a 时一个都不用删，当 n &lt;= a 时候必须全部删完。 D 签到。 根据题目意思，我们可以发现 当已经有现成的 a 个并列的1 我们总可以先把他变成0然后再跟前后连续的一个0组成a + 1 个并列的0 也就是说 只要找到 a 个现成的连续... ]]></description>
    <pubDate>Tue, 22 Jul 2025 17:45:15 GMT</pubDate>
  </item><item>
    <title>101</title>
    <link>https://quartz.jzhao.xyz/ACM-research/%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98%EF%BC%81/nowcoder/%E7%89%9B%E5%AE%A2%E5%91%A8%E8%B5%9B/101</link>
    <guid>https://quartz.jzhao.xyz/ACM-research/%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98-%E8%A1%A5%E9%A2%98%EF%BC%81/nowcoder/%E7%89%9B%E5%AE%A2%E5%91%A8%E8%B5%9B/101</guid>
    <description><![CDATA[ A 签到。 值得注意的是，log2 是以2为底的对数，log10 是以10为底的对数，所以 log 就是ln 了，直接输出 150 * log(n) 即可。 B 签到，找准除法的细节。 C 记 n 的最高位是 pos 那么这个数字就是 1 &lt;&lt; (pos + 1) - 1 最高位可以用 __lg(n) 来快速求得 void solve() { int n; cin &gt;&gt; n; cout &lt;&lt; (1 &lt;&lt; (__lg(n) + 1) - 1); } D 注意到区间内包含1的 gcd的结果一定是1 所以想办法把需要的数字单独划分为一个区间，不需要的数... ]]></description>
    <pubDate>Tue, 22 Jul 2025 17:45:15 GMT</pubDate>
  </item><item>
    <title>关于</title>
    <link>https://quartz.jzhao.xyz/%E5%85%B3%E4%BA%8E</link>
    <guid>https://quartz.jzhao.xyz/%E5%85%B3%E4%BA%8E</guid>
    <description><![CDATA[ 一个学生，现阶段最喜欢做的事是躺着。. ]]></description>
    <pubDate>Tue, 22 Jul 2025 17:45:15 GMT</pubDate>
  </item><item>
    <title>1227</title>
    <link>https://quartz.jzhao.xyz/ACM-research/ACW2024/%E4%BA%8C%E5%88%86/1227</link>
    <guid>https://quartz.jzhao.xyz/ACM-research/ACW2024/%E4%BA%8C%E5%88%86/1227</guid>
    <description><![CDATA[ void solve() { int n, k; cin &gt;&gt; n &gt;&gt; k; int maxnum = 0; vector&lt;int&gt; h(n), k = h; for (int i = 0; i &lt; n; i++) { cin &gt;&gt; h[i] &gt;&gt; k[i]; maxnum = max({maxnum, h[i], k[i]}); } int l = 1, r = maxnum, m, ans; while (l &lt;= r) { m = l + (r - l) / 2; auto check = [&amp;]() { ... ]]></description>
    <pubDate>Tue, 22 Jul 2025 14:15:19 GMT</pubDate>
  </item><item>
    <title>503</title>
    <link>https://quartz.jzhao.xyz/ACM-research/ACW2024/%E4%BA%8C%E5%88%86/503</link>
    <guid>https://quartz.jzhao.xyz/ACM-research/ACW2024/%E4%BA%8C%E5%88%86/503</guid>
    <description><![CDATA[ void solve() { int n, m; cin &gt;&gt; n &gt;&gt; m; vector&lt;int&gt; v(n + 2); for (int i = 1; i &lt;= n; i++) cin &gt;&gt; v[i]; for (int i = n; i &gt;= 1; i--) v[i] -= v[i - 1]; struct datas { int d, s, t; }; vector&lt;datas&gt; k(m + 1); for (int i = 1; i &lt;= m; i++) cin &gt;&gt; k[i].d &gt;&g... ]]></description>
    <pubDate>Tue, 22 Jul 2025 14:15:19 GMT</pubDate>
  </item><item>
    <title>5407</title>
    <link>https://quartz.jzhao.xyz/ACM-research/ACW2024/%E4%BA%8C%E5%88%86/5407</link>
    <guid>https://quartz.jzhao.xyz/ACM-research/ACW2024/%E4%BA%8C%E5%88%86/5407</guid>
    <description><![CDATA[ void solve() { auto check = [&amp;]() -&gt; bool { }; }. ]]></description>
    <pubDate>Tue, 22 Jul 2025 14:15:19 GMT</pubDate>
  </item><item>
    <title>562</title>
    <link>https://quartz.jzhao.xyz/ACM-research/ACW2024/%E5%89%8D%E7%BC%80%E5%92%8C/562</link>
    <guid>https://quartz.jzhao.xyz/ACM-research/ACW2024/%E5%89%8D%E7%BC%80%E5%92%8C/562</guid>
    <description><![CDATA[ void solve() { int n; cin &gt;&gt; n; string s; cin &gt;&gt; s; }. ]]></description>
    <pubDate>Tue, 22 Jul 2025 14:15:19 GMT</pubDate>
  </item>
    </channel>
  </rss>